{"version":3,"sources":["images/logos/logo.svg","pages/PagePaths.js","components/Nav.jsx","components/Filter.jsx","components/FoodCard.jsx","components/SortDropdown.jsx","components/FoodList.jsx","pages/HomePage.jsx","pages/OrderPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HOME_PAGE","ORDER_PAGE","Nav","className","to","Pages","src","logo","width","height","alt","loading","Filter","state","catergories","name","this","renderCategories","params","map","item","key","onClick","itemOnClick","alert","console","warn","Component","FoodCard","props","food","ingredient","price","count","edit","size","isHalf","value","rating","activeColor","role","aria-label","type","SortDropdown","Row","DropdownButton","id","title","Dropdown","Item","href","FoodList","foodList","HomePage","OrderPage","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,kC,iJCC9BC,EAAS,WADL,eACK,KACTC,EAAU,WAFN,eAEM,WCgDRC,EA3CH,WACV,OACE,yBAAKC,UAAU,8CACb,kBAAC,IAAD,CAAMC,GAAIC,GACR,yBAAKF,UAAU,gBACb,yBACEG,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPN,UAAU,2BACVO,IAAI,GACJC,QAAQ,SAPZ,cAaF,wBAAIR,UAAU,2BACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAIC,GACR,0BAAMF,UAAU,gCAAhB,wBAMJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAIC,GACR,yBACEC,IAAKC,IACLC,MAAM,KACNC,OAAO,KACPN,UAAU,iBACVO,IAAI,GACJC,QAAQ,c,sCCIPC,G,kNAxCbC,MAAQ,CACNC,YAAa,CACX,CAAEC,KAAM,OACR,CAAEA,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,SACR,CAAEA,KAAM,a,uDAIV,OACE,yBAAKZ,UAAU,iBACb,yBAAKA,UAAU,eAAf,UAECa,KAAKC,sB,uCAKKC,GAAS,IAAD,OACvB,OACE,wBAAIf,UAAU,wBACXa,KAAKH,MAAMC,YAAYK,KAAI,SAACC,GAAD,OAC1B,wBACEC,IAAKD,EAAKL,KACVO,QAAS,kBAAM,EAAKC,eACpBpB,UAAU,eAETiB,EAAKL,Y,oCAOdS,MAAM,gBACNC,QAAQC,KAAK,uB,GArCIC,c,iBCkCNC,E,4MAhCbf,MAAQ,G,uDAGN,OACE,yBAAKV,UAAU,kCACb,4BAAKa,KAAKa,MAAMC,KAAKf,MACrB,2BAAIC,KAAKa,MAAMC,KAAKC,YACpB,+BAAKf,KAAKa,MAAMC,KAAKE,OACrB,kBAAC,IAAD,CACEC,MAAO,EACPC,MAAM,EACNC,KAAM,GACNC,QAAQ,EACRC,MAAOrB,KAAKa,MAAMC,KAAKQ,OACvBC,YAAY,YAEd,yBAAKpC,UAAU,YAAYqC,KAAK,QAAQC,aAAW,iBACjD,4BAAQC,KAAK,SAASvC,UAAU,iBAAhC,KAGA,0BAAMuC,KAAK,SAASvC,UAAU,OAA9B,KAGA,4BAAQuC,KAAK,SAASvC,UAAU,iBAAhC,W,GAxBawB,a,wBCgBRgB,E,4MAdb9B,MAAQ,G,uDAEN,OACE,kBAAC+B,EAAA,EAAD,CAAKzC,UAAU,IAAf,WAEE,kBAAC0C,EAAA,EAAD,CAAgBC,GAAG,gBAAgBC,MAAM,QACvC,kBAACC,EAAA,EAASC,KAAV,CAAeC,KAAK,cAApB,QACA,kBAACF,EAAA,EAASC,KAAV,CAAeC,KAAK,cAApB,e,GARiBvB,aC8BZwB,E,4MA9BbtC,MAAQ,CACNuC,SAAU,CACR,CACErC,KAAM,yBACNgB,WAAY,4DACZC,MAAO,KACPM,OAAQ,GAEV,CACEvB,KAAM,oBACNgB,WAAY,4DACZC,MAAO,KACPM,OAAQ,O,uDAKZ,OACE,yBAAKnC,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,OACZa,KAAKH,MAAMuC,SAASjC,KAAI,SAACC,GAAD,OACvB,kBAAC,EAAD,CAAUC,IAAKD,EAAKL,KAAMe,KAAMV,a,GAvBrBO,aCkBR0B,E,4MAjBbxC,MAAQ,G,uDAEN,OACE,yBAAKV,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iCACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gCACb,kBAAC,EAAD,a,GAVWwB,aCGR2B,E,4MANXzC,MAAQ,G,uDAEJ,OAAS,8C,GAHOc,aCqBT4B,MAdf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKpD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqD,KAAMnD,EAAiBoD,OAAK,EAACC,UAAWL,IAC/C,kBAAC,IAAD,CAAOG,KAAMnD,EAAkBqD,UAAWJ,QCHhCK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.66f14c2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const APP_NAME = \"Resume-React\";\nexport const HOME_PAGE = `/${APP_NAME}/`;\nexport const ORDER_PAGE = `/${APP_NAME}/order/`;\n","import React from \"react\";\nimport logo from \"../images/logos/logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport * as Pages from \"../pages/PagePaths\";\nimport \"../css/App.css\";\n//sfc stateless functional component\n//cc  class component\nconst Nav = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark shadow p-3 mb-5\">\n      <Link to={Pages.HOME_PAGE}>\n        <div className=\"navbar-brand\">\n          <img\n            src={logo}\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"\"\n            loading=\"lazy\"\n          />\n          Web React\n        </div>\n      </Link>\n\n      <ul className=\"nav justify-content-end\">\n        <li className=\"nav-item\">\n          <Link to={Pages.HOME_PAGE}>\n            <span className=\"VerticalCenter PrimaryColor \">\n              Hello Jay!(LOGOUT)\n            </span>\n          </Link>\n        </li>\n\n        <li className=\"nav-item\">\n          <Link to={Pages.ORDER_PAGE}>\n            <img\n              src={logo}\n              width=\"30\"\n              height=\"30\"\n              className=\"VerticalCenter\"\n              alt=\"\"\n              loading=\"lazy\"\n            />\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/App.css\";\n\nclass Filter extends Component {\n  state = {\n    catergories: [\n      { name: \"ALL\" },\n      { name: \"Soups\" },\n      { name: \"Salads\" },\n      { name: \"Wraps\" },\n      { name: \"Entrees\" },\n    ],\n  };\n  render() {\n    return (\n      <div className=\"filter-layout\">\n        <div className=\"filter-item\">FILTER</div>\n        {/* <div className=\"filter-item\">ALL</div> */}\n        {this.renderCategories()}\n      </div>\n    );\n  }\n\n  renderCategories(params) {\n    return (\n      <ul className=\"no-bullet list-group\">\n        {this.state.catergories.map((item) => (\n          <li\n            key={item.name}\n            onClick={() => this.itemOnClick()}\n            className=\"filter-item\"\n          >\n            {item.name}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  itemOnClick() {\n    alert(\"hello, word!\");\n    console.warn(\"item is clicked\");\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../css/App.css\";\nimport ReactStars from \"react-rating-stars-component\";\n\nclass FoodCard extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"container shadow CardContainer\">\n        <h5>{this.props.food.name}</h5>\n        <p>{this.props.food.ingredient}</p>\n        <p>${this.props.food.price}</p>\n        <ReactStars\n          count={5}\n          edit={false}\n          size={24}\n          isHalf={true}\n          value={this.props.food.rating}\n          activeColor=\"#ffd700\"\n        />\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-light\">\n            -\n          </button>\n          <span type=\"button\" className=\"btn\">\n            1\n          </span>\n          <button type=\"button\" className=\"btn btn-light\">\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FoodCard;\n","import React, { Component } from \"react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport \"../css/App.css\";\nimport { Row } from \"react-bootstrap\";\n\nclass SortDropdown extends Component {\n  state = {};\n  render() {\n    return (\n      <Row className=\"\">\n        Sort By:\n        <DropdownButton id=\"sort-dropdown\" title=\"Name\">\n          <Dropdown.Item href=\"#/action-1\">Name</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-2\">Price</Dropdown.Item>\n        </DropdownButton>\n      </Row>\n    );\n  }\n}\n\nexport default SortDropdown;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport FoodCard from \"../components/FoodCard\";\nimport SortDropdown from \"./SortDropdown\";\n\nclass FoodList extends Component {\n  state = {\n    foodList: [\n      {\n        name: \"Chicken Vegetable Soup\",\n        ingredient: \"Freee range chicken with no antibiotics, potatoes, onions\",\n        price: 3.99,\n        rating: 5,\n      },\n      {\n        name: \"Green Lentil Soup\",\n        ingredient: \"Freee range chicken with no antibiotics, potatoes, onions\",\n        price: 2.99,\n        rating: 4.5,\n      },\n    ],\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <SortDropdown />\n        <div className=\"row\">\n          {this.state.foodList.map((item) => (\n            <FoodCard key={item.name} food={item} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FoodList;\n","import React, { Component } from \"react\";\nimport Filter from \"../components/Filter\";\nimport FoodList from \"../components/FoodList\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass HomePage extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-mid-3 col-xl-2 bd-sidebar\">\n            <Filter />\n          </div>\n          <div className=\"col-md-9 col-xl-8 bd-content\">\n            <FoodList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nclass OrderPage extends Component {\n    state = {  }\n    render() { \n        return ( <h1>Order Page</h1> );\n    }\n}\n \nexport default OrderPage;","import React from \"react\";\nimport \"./css/App.css\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport OrderPage from \"./pages/OrderPage\";\nimport * as Pages from \"./pages/PagePaths\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path={Pages.HOME_PAGE} exact component={HomePage} />\n          <Route path={Pages.ORDER_PAGE} component={OrderPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}